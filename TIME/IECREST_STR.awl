FUNCTION_BLOCK "IECREST_STR 1.5P"
TITLE =Convert IEC remaining time to formatted time string
KNOW_HOW_PROTECT
//v1.5: Initial version for remaing time conversion.
//v1.3: (11May15/STP) Omit parts not needed.
//v1.2: Rewrote math for days/hours/minutes, eliminating the loops.
//      Moved all intermediate data to TEMP area.
//v1.1 15Oct14 (STP): Corrected the byte sequence. Moved the time components 
//      to the STAT area. Shortened the output string from 14 to 12 chars.
//
//Pass a time value as number of seconds and return a formatted string 
//"dd:hh:mm:ss". If days or hours are not needed they will be omitted (but string 
//length will alway be the same).
AUTHOR : splanken
VERSION : 1.5


VAR_INPUT
  IEC_time_SP : TIME ;	
  IEC_time : TIME ;	
END_VAR
VAR_OUTPUT
  TimeString : STRING  [12 ];	
END_VAR
VAR_TEMP
  sDiValue : DINT ;	
  sWoLoop : WORD ;	
  TmpDint : DINT ;	
  days : INT ;	
  hours : INT ;	
  min : INT ;	
  sec : INT ;	
END_VAR
BEGIN
NETWORK
TITLE =Initialization
//Initialisierung
//****************
//Initialization
      L     #IEC_time_SP; 
      L     #IEC_time; 
      -D    ; 
      L     L#1000; 
      /D    ; 
      T     #sDiValue; 

      L     0; 
      T     #days; 
      T     #hours; 
      T     #min; 
      T     #sec; 

NETWORK
TITLE =Berechnung Tag, Stunde, Minute / Calculation of days, hour, min
//Calculation of days, hours, minutes and seconds
//
//29Apr15: (STP) Complete rewrite; the Siemens code used idiotic loops.
      L     #sDiValue; // Calculate whole days
      L     L#86400; 
      /D    ; 
      T     #days; 

      L     #sDiValue; // ..remainder is hours
      L     L#86400; 
      MOD   ; 
      T     #TmpDint; 

      L     L#3600; // Calculate whole hours
      /D    ; 
      T     #hours; 

      L     #TmpDint; 
      L     L#3600; 
      MOD   ; 
      T     #TmpDint; // ..remainder is minutes

      L     L#60; // Calculate whole minutes
      /D    ; 
      T     #min; 

      L     #TmpDint; // ..remainder is seconds
      L     L#60; 
      MOD   ; 
      T     #sec; 

NETWORK
TITLE =Write values

// --------------------------------------------------
// Write "MM:SS" (always)
// --------------------------------------------------

      L     #sec; // Seconds (1)
      L     10; 
      MOD   ; 
      L     48; 
      +I    ; 
      T     #TimeString[11]; 

      L     #sec; // Seconds (10)
      L     10; 
      /I    ; 
      L     48; 
      +I    ; 
      T     #TimeString[10]; 

      L     ':'; 
      T     #TimeString[9]; 

      L     #min; // Minutes (1)
      L     10; 
      MOD   ; 
      L     48; 
      +I    ; 
      T     #TimeString[8]; 

      L     #min; // Minutes (10)
      L     10; 
      /I    ; 
      L     48; 
      +I    ; 
      T     #TimeString[7]; 

// --------------------------------------------------
// Write "HH:" if needed
// --------------------------------------------------

      L     #hours; // Omit if DD or HH zero
      L     #days; 
      +I    ; 
      L     0; 
      >I    ; 
      JC    N3h; 

// Write blanks if DD + HH = 0
      L     ' '; 
      T     #TimeString[1]; // "D"
      T     #TimeString[2]; // "D"
      T     #TimeString[3]; // ":"
      T     #TimeString[4]; // "H"
      T     #TimeString[5]; // "H"
      T     #TimeString[6]; // ":"
      JU    N3x; // Done

// Write HH
N3h:  L     #hours; // Hours (1)
      L     10; 
      MOD   ; 
      L     48; 
      +I    ; 
      T     #TimeString[5]; 

      L     #hours; // Hours (10)
      L     10; 
      /I    ; 
      L     48; 
      +I    ; 
      T     #TimeString[4]; 

      L     ':'; 
      T     #TimeString[6]; 

// --------------------------------------------------
// Write "DD:" if needed
// --------------------------------------------------

      L     #days; // Omit if DD zero
      L     0; 
      >I    ; 
      JC    N3d; 

// Write blanks if DD = 0
      L     ' '; 
      T     #TimeString[1]; // "D"
      T     #TimeString[2]; // "D"
      T     #TimeString[3]; // ":"
      JU    N3x; // Done

// Write DD
N3d:  L     #days; // Days (1)
      L     10; 
      MOD   ; 
      L     48; 
      +I    ; 
      T     #TimeString[2]; 

      L     #days; // Days (10)
      L     10; 
      /I    ; 
      L     48; 
      +I    ; 
      T     #TimeString[1]; 

      L     ':'; 
      T     #TimeString[3]; 

N3x:  NOP   0; 
NETWORK
TITLE =

// Write string header
      LAR1  P##TimeString; 
      L     12; 
      T     B [AR1,P#0.0]; // Write max length of string
      L     11; 
      T     B [AR1,P#1.0]; // Write actual length of string

// Force ENO
      SET   ; 
      SAVE  ; 
END_FUNCTION_BLOCK

