FUNCTION_BLOCK "liquid PV"
TITLE =Metering injection
AUTHOR : splanken
VERSION : 1.1


VAR_INPUT
  Mash_rate : REAL ;	//Current mash rate kg/h
  Mash_TE : REAL ;	//Actual mash temperature
  Start_TE : REAL ;	//Mash temperature at which to apply liquid
  Src_bin : INT ;	//Source mash bin
  Dst_bin : INT ;	//Destination product bin
  Max_flow : REAL ;	//Max liquid flow rate kg/h
  AD_LL : INT ;	//AD value corresponding to output = 0%
  AD_UL : INT ;	//AD value Corresponding to output = 100%
  Cond_running : BOOL ;	//Conditioner running state
  Cond_load : BOOL ;	//Conditioner conveying mash
  Hold_at_start : BOOL ;	//On a new run, hold liquid by default
  Clock_1HZ : BOOL ;	
END_VAR
VAR_OUTPUT
  SV : BOOL ;	//Solenoid valve coil
  SV_ZC : BOOL ;	//HMI indication solenoid closed
  SV_ZO : BOOL ;	//HMI indication solenoid open
  PV_ZC : BOOL ;	//HMI indication proportioning valve closed
  SP_warning : BOOL ;	//Capacity exceeded (demand exceeds max flow)
  OP_PER : INT ;	//Peripheral output value
  OP : REAL ;	//Output as pseudo percentage 0..100
END_VAR
VAR_IN_OUT
  SP : REAL ;	//auto=inclusion rate kg/T; manual=valve position %
  Auto : BOOL ;	//Operator control true=auto mode
  Hold : BOOL ;	//Operator control HOLD true=hold liquid
  MaintMode : BOOL ;	
  Accu : REAL ;	
END_VAR
VAR
  Internal : STRUCT 	
   SP : REAL ;	//User setpoint
   SP_auto_prev : REAL ;	//Previous SP in auto mode
   Max_flow_s : REAL ;	//Max flow rate kg/s
   OP : REAL ;	//Output signal as pseudo-percentage 0.0-1.0
   OP_raw : REAL ;	//Output signal, not limited
   TE_LL : REAL ;	
   Accu : REAL ;	//liquid accumulation kg
   Accu_s : REAL ;	//Accumulation per sec at current mash rate
   SV : BOOL ;	//Solenoid valve coil
   EOR : BOOL ;	//End-of-run one-shot
   SOR : BOOL ;	//Start-of-run one-shot
   TE_action : BOOL ;	//Temperature-driven action required
   Accu_reset : BOOL ;	//Additional reset for accumulator
   Spare5 : BOOL ;	
   Spare6 : BOOL ;	
   Spare7 : BOOL ;	
  END_STRUCT ;	
  Pls : ARRAY  [1 .. 32 ] OF BOOL ;	
  T_cond_run : "TON";	
  T_accu_dly : "TON";	
END_VAR
VAR_TEMP
  TempReal : REAL ;	
END_VAR
BEGIN
NETWORK
TITLE =Switch to auto mode: restore last auto setpoint
//When switching from manual to automatic, load the previous inclusion rate that 
//was used in auto mode. (Or 0 if not previously used.)
      A     #Auto; 
      FP    #Pls[1]; 
      JNB   _001; 
      L     #Internal.SP_auto_prev; 
      T     #SP; 
_001: NOP   0; 
NETWORK
TITLE =Switch to manual mode: use current valve position
//When switching from automatic to manual control, leave the valve at its current 
//position to maintain current flow.
//
//Note: As we cannot read the #OP value (as this is an output) we use the 
//internal value.
      A     #Auto; 
      FN    #Pls[2]; 
      JNB   _002; 
      L     #Internal.OP; 
      L     1.000000e+002; 
      *R    ; 
      T     #SP; 
_002: NOP   0; 
NETWORK
TITLE =Store auto setpt while in auto
//While in auto mode, store the current inclusion rate.
      A     #Auto; 
      JNB   _003; 
      L     #SP; 
      T     #Internal.SP_auto_prev; 
_003: NOP   0; 
NETWORK
TITLE =Maintenance mode on: switch to manual
//In maintenance mode, manual mode is most helpful as the operator can enter a 
//percentage. Regardless of the conditioner, with the hold removed and a setpoint 
//applied, the valve will open. This can be used to calibrate or troubleshoot  
//the system, regardless of whether the conditioner is running.
//
//Switching maintenance mode ON:
//  - Switch to manual mode
//  - Remove hold
//  - Set desired valve position to 0.0% (closed)
//
//Switching maintenance mode OFF:
//  - Switch auto mode
//  - Apply hold
      A     #MaintMode; 
      =     L      4.0; 
      A     L      4.0; 
      FP    #Pls[3]; 
      =     L      4.1; 
      A     L      4.1; 
      BLD   102; 
      R     #Hold; 
      A     L      4.1; 
      JNB   _004; 
      L     0.000000e+000; 
      T     #SP; 
_004: NOP   0; 
      A     L      4.0; 
      BLD   102; 
      R     #Auto; 
NETWORK
TITLE =Maintenance mode off: switch to auto
//Switching maintenance mode OFF:
//  - Switch auto mode
//  - Apply hold
//  - Set rate to 0kg/T (clear previous value)
      A     #MaintMode; 
      FN    #Pls[4]; 
      =     L      4.0; 
      A     L      4.0; 
      BLD   102; 
      S     #Auto; 
      A     L      4.0; 
      BLD   102; 
      S     #Hold; 
      A     L      4.0; 
      JNB   _005; 
      L     0.000000e+000; 
      T     #SP; 
_005: NOP   0; 
NETWORK
TITLE =Auto: limit operator setpoint to incl rate
//Auto mode: setpoint represents an inclusion rate of liquid kg per T of mash. The 
//valve position modulates to maintain the rate. Limiting between 0..100 means 
//10% inclusion max.
//Manual mode: setpoint represents a desired valve position that will not be 
//modulated. 
      A(    ; 
      L     #SP; 
      T     #Internal.SP; 
      SET   ; 
      SAVE  ; 
      CLR   ; 
      A     BR; 
      )     ; 
      A     #Auto; 
      JNB   _006; 
      CALL "EnforceLimitReal" (
           LowerLimit               := 0.000000e+000,
           UpperLimit               := 5.000000e+001,
           ProcessValue             := #Internal.SP);
_006: NOP   0; 
NETWORK
TITLE =Manual: limit operator setpoint to 100% position
//Auto mode: setpoint represents an inclusion rate of liquid kg per T of mash. The 
//valve position modulates to maintain the rate. Limiting between 0..100 means 
//10% inclusion max.
//Manual mode: setpoint represents a desired valve position that will not be 
//modulated. 
      AN    #Auto; 
      JNB   _007; 
      CALL "EnforceLimitReal" (
           LowerLimit               := 0.000000e+000,
           UpperLimit               := 1.000000e+002,
           ProcessValue             := #Internal.SP);
_007: NOP   0; 
NETWORK
TITLE =Introduce temperature hysteresis
//Prevent the valve output from flickering when around the threshold. The value 
//should be >= 0 and is set to 0.75degC by default.
      L     #Start_TE; 
      L     7.500000e-001; 
      -R    ; 
      T     #Internal.TE_LL; 
      NOP   0; 
NETWORK
TITLE =Manual mode position calculation
//Calculate the desired valve position as a percentage 0.0-1.0.
      AN    #Auto; 
      JNB   _008; 
      L     #Internal.SP; 
      L     1.000000e+002; 
      /R    ; 
      T     #Internal.OP; 
_008: NOP   0; 
NETWORK
TITLE =Auto mode position calculation
//Valve position is calculated as desired flow relative to max flow, depending on 
//the mash flow.
//
//Calculation example:
//
//  ([SP]/1000) * [mash_rate]
//  ------------------------- = [control%]
//      [max_liquid_flow]
//
//The internal output signal is always calculated, even if the shut-off solenoid 
//valve is closed.
      AN    #Auto; 
      JC    FCX; 

      L     #Internal.SP; // Inclusion [kg/T]
      L     1.000000e+003; 
      /R    ; 
      L     #Mash_rate; 
      *R    ; 
      L     #Max_flow; 
      /R    ; 
      T     #Internal.OP_raw; // Precentage 1=100%, unlimited
      T     #Internal.OP; // Percentage 0.0..1.0

FCX:  NOP   0; 

NETWORK
TITLE =Limit the output signal

      CALL "EnforceLimitReal" (
           LowerLimit               := 0.000000e+000,
           UpperLimit               := 1.000000e+000,
           ProcessValue             := #Internal.OP);
      NOP   0; 
NETWORK
TITLE =End-of-run

      AN    #Cond_running; 
      A(    ; 
      L     #Dst_bin; 
      L     0; 
      ==I   ; 
      )     ; 
      FP    #Pls[5]; 
      =     #Internal.EOR; 
NETWORK
TITLE =End-of-run: Hold liquid
//Place liquid on hold:
//- At the end of a run (mash bin deselected, conditioner stopped).
//
//03Jul15: (STP) Removed applying HOLD on switch between manual/auto mode.
      A     #Internal.EOR; 
      S     #Hold; 
NETWORK
TITLE =Start of run

      A(    ; 
      L     #Src_bin; 
      L     0; 
      <>I   ; 
      )     ; 
      A(    ; 
      L     #Dst_bin; 
      L     0; 
      <>I   ; 
      )     ; 
      FP    #Pls[6]; 
      =     #Internal.SOR; 
NETWORK
TITLE =Start-of-run: enable liquid & switch to auto
//03Jul15: (STP) As requested by DQ: we wil apply liquid on a new run. Normally, 
//we should use the "start-of-run" boolean but this becomes active only after a 
//small delay. The operator needs to be able to select bins and decide whether to 
//use liquid or not, so we monitor for valid bin numbers only.
//
//Removal of the HOLD at the start of a run is optional.
      A     #Internal.SOR; 
      =     L      4.0; 
      A     L      4.0; 
      AN    #Hold_at_start; 
      R     #Hold; 
      A     L      4.0; 
      BLD   102; 
      S     #Auto; 
NETWORK
TITLE =Start-of-run: clear accumulation

      A     #Internal.SOR; 
      FP    #Pls[7]; 
      S     #Internal.Accu_reset; 
NETWORK
TITLE =Start-of-run: clear previous auto setpt
//To ensure that on a new run we do not load the auto setpt from a previous run 
//we clear that here. But note that while in auto it will be overwritten.
      A     #Internal.SOR; 
      JNB   _009; 
      L     0.000000e+000; 
      T     #Internal.SP_auto_prev; 
_009: NOP   0; 
NETWORK
TITLE =Conditioner delayed running status

      A     #Cond_running; 
      =     L      4.0; 
      BLD   103; 
      CALL #T_cond_run (
           IN                       := L      4.0,
           PT                       := T#2S);

      NOP   0; 
NETWORK
TITLE =Call for liquid once temperature reached setpoint
//Open the PV once the mash temp exceeds the desired threshold and only shut off 
//once below the threshold minus the hysteresis to prevent flickering around the 
//threshold. Note that the R input uses "<" and the S input uses ">=" in case the 
//hysteresis is set to 0.
      A(    ; 
      L     #Mash_TE; 
      L     #Internal.TE_LL; 
      <R    ; 
      )     ; 
      R     #Internal.TE_action; 
      A(    ; 
      L     #Mash_TE; 
      L     0.000000e+000; 
      >=R   ; 
      )     ; 
      A(    ; 
      L     #Mash_TE; 
      L     #Start_TE; 
      >=R   ; 
      )     ; 
      S     #Internal.TE_action; 
      NOP   0; 
NETWORK
TITLE =Energize the shut-off valve solenoid
//Open the shutoff valve:
// - conditioner running under load
// - temperature at desired value
// - no hold
// - command signal present
      A(    ; 
      A     #T_cond_run.Q; 
      A     #Cond_load; 
      A     #Internal.TE_action; 
      O     #MaintMode; 
      )     ; 
      AN    #Hold; 
      A(    ; 
      L     #Internal.SP; 
      L     0.000000e+000; 
      >R    ; 
      )     ; 
      A(    ; 
      L     #Internal.OP; 
      L     0.000000e+000; 
      >R    ; 
      )     ; 
      =     #Internal.SV; 
      =     #SV; 
NETWORK
TITLE =Indicate shut off valve open (HMI)
//Send the open/closed status to WinCC for dynamic coloring.
      A     #Internal.SV; 
      =     L      4.0; 
      A     L      4.0; 
      BLD   102; 
      =     #SV_ZO; 
      A     L      4.0; 
      NOT   ; 
      =     #SV_ZC; 
NETWORK
TITLE =Calculate pseudo percentage for HMI
//Convert valve position from percentage to pseudo percentage 0-100.
      A(    ; 
      L     0.000000e+000; 
      T     #OP; 
      SET   ; 
      SAVE  ; 
      CLR   ; 
      A     BR; 
      )     ; 
      A     #Internal.SV; 
      JNB   _00a; 
      L     #Internal.OP; 
      L     1.000000e+002; 
      *R    ; 
      T     #OP; 
_00a: NOP   0; 
NETWORK
TITLE =Convert analog control signal
//If flow is not registered until a non-linear valve opens at 30% setpoint, then 
//use that corresponding A/D value as the lower limit. The window where we see 
//flow is then between 30% and 100%. Also take into account whether the PLC 
//output module is 0-20mA or 4-20mA.
      A(    ; 
      L     0; 
      T     #OP_PER; 
      SET   ; 
      SAVE  ; 
      CLR   ; 
      A     BR; 
      )     ; 
      A     #Internal.SV; 
      JNB   _00b; 
      CALL "PCT_AD" (
           Pct_in                   := #OP,
           AD_LL                    := #AD_LL,
           AD_UL                    := #AD_UL,
           AD_out                   := #OP_PER);
_00b: NOP   0; 
NETWORK
TITLE =Indicate proportioning valve closed (HMI)
//Indicate to WinCC that the proportioning valve is closed (dynamic coloring).
      L     #OP; 
      L     0.000000e+000; 
      <=R   ; 
      =     #PV_ZC; 
NETWORK
TITLE =Visual feedback: capacity exceeded
//If the valve is asked to deliver in excess of capacity, show an alarm.
//
//24Aug18: (STP) Created to show operator the setpoint is too large. (Actual 
//inclusion rate depends on mash rate and cannot exceed valve capacity.)
      A     #Internal.SV; 
      A(    ; 
      L     #Internal.OP_raw; 
      L     1.000000e+000; 
      >R    ; 
      )     ; 
      =     #SP_warning; 
NETWORK
TITLE =Maximum flow kg/h, kg/s
//Max flow is previously established via calibration. (Meter an unknown amount of 
//liquid into a pail. Measure time and weigh. At that valve position it will give 
//x kg/h flow.) Extrapolate to 100% valve position. Enter the value here and 
//enforce limits. Calculate the flow per second for accumulation.
//
//16Aug18: Stephan/Nomer: SP=100%: 3.91kg/130s = 108.28kg/h
//         First flow detected at 50% valve setting = 12144, which is the value
//         used as AD_LL for the output conversion.
      A(    ; 
      L     #Max_flow; 
      L     3.600000e+003; 
      /R    ; 
      T     #Internal.Max_flow_s; 
      AN    OV; 
      SAVE  ; 
      CLR   ; 
      A     BR; 
      )     ; 
      A(    ; 
      L     #Internal.Max_flow_s; 
      L     0.000000e+000; 
      <R    ; 
      )     ; 
      JNB   _00c; 
      L     0.000000e+000; 
      T     #Internal.Max_flow_s; 
_00c: NOP   0; 
NETWORK
TITLE =Accumulation: Enable liquid accumulation

      AN    #MaintMode; 
      A     #Internal.SV; 
      =     L      4.0; 
      BLD   103; 
      CALL #T_accu_dly (
           IN                       := L      4.0,
           PT                       := T#1S);

      NOP   0; 
NETWORK
TITLE =Accumulation: Accumulate liquid
//Not the most accurate way. But the mash speed can change any time, which 
//changes the mash rate, which changes the liquid valve modulation. So we just 
//accumulate per second and contend with the inaccuracies.
//
//16Aug18: (STP) Flow takes a second to start, addd delay.
      A(    ; 
      A     #T_accu_dly.Q; 
      A     #Clock_1HZ; 
      JNB   _00d; 
      L     #Internal.Max_flow_s; 
      L     #Internal.OP; 
      *R    ; 
      T     #Internal.Accu_s; 
      AN    OV; 
      SAVE  ; 
      CLR   ; 
_00d: A     BR; 
      )     ; 
      JNB   _00e; 
      L     #Accu; 
      L     #Internal.Accu_s; 
      +R    ; 
      T     #Accu; 
_00e: NOP   0; 
NETWORK
TITLE =Accumulation: clear accumulation

      A     #Internal.Accu_reset; 
      =     L      4.0; 
      A     L      4.0; 
      JNB   _00f; 
      L     0.000000e+000; 
      T     #Accu; 
_00f: NOP   0; 
      A     L      4.0; 
      BLD   102; 
      R     #Internal.Accu_reset; 
END_FUNCTION_BLOCK

